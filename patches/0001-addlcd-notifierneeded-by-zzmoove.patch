From 67ed375fae5da28d7cfe6373158dbc2e3c8c2b65 Mon Sep 17 00:00:00 2001
From: mostafa-z <mostafazarghami@gmail.com>
Date: Sun, 7 Jun 2015 00:07:38 +0430
Subject: [PATCH] add:lcd notifier|needed by zzmoove

---
 drivers/video/msm/mdss/Makefile     |  2 ++
 drivers/video/msm/mdss/lcd_notify.c | 53 +++++++++++++++++++++++++++++++++++++++++++++++++++++
 drivers/video/msm/mdss/mdss_dsi.c   |  5 +++++
 include/linux/lcd_notify.h          | 38 ++++++++++++++++++++++++++++++++++++++
 4 files changed, 98 insertions(+), 0 deletions(-)
 create mode 100644 drivers/video/msm/mdss/lcd_notify.c
 create mode 100644 include/linux/lcd_notify.h

diff --git a/drivers/video/msm/mdss/Makefile b/drivers/video/msm/mdss/Makefile
index 8273ca2..94a9951 100644
--- a/drivers/video/msm/mdss/Makefile
+++ b/drivers/video/msm/mdss/Makefile
@@ -49,3 +49,5 @@ obj-$(CONFIG_FB_MSM_MDSS) += mdss_fb.o
 obj-$(CONFIG_FB_MSM_MDSS_DSI_CTRL_STATUS) += mdss_dsi_status.o
 
 obj-$(CONFIG_FB_MSM_MDSS_KCAL_CTRL) += mdss_mdp_kcal_ctrl.o
+
+obj-$(CONFIG_FB_MSM_MDSS) += lcd_notify.o
diff --git a/drivers/video/msm/mdss/lcd_notify.c b/drivers/video/msm/mdss/lcd_notify.c
new file mode 100644
index 0000000..5e0d8ae
--- /dev/null
+++ b/drivers/video/msm/mdss/lcd_notify.c
@@ -0,0 +1,53 @@
+/*
+ * drivers/video/msm/mdss/lcd_notify.c
+ *
+ * Copyright (C) 2013 LGE Inc
+ *
+ * This software is licensed under the terms of the GNU General Public
+ * License version 2, as published by the Free Software Foundation, and
+ * may be copied, distributed, and modified under those terms.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ */
+
+#include <linux/lcd_notify.h>
+#include <linux/notifier.h>
+#include <linux/export.h>
+
+static BLOCKING_NOTIFIER_HEAD(lcd_notifier_list);
+
+/**
+ *	lcd_register_client - register a client notifier
+ *	@nb: notifier block to callback on events
+ */
+int lcd_register_client(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_register(&lcd_notifier_list, nb);
+}
+EXPORT_SYMBOL(lcd_register_client);
+
+/**
+ *	lcd_unregister_client - unregister a client notifier
+ *	@nb: notifier block to callback on events
+ */
+int lcd_unregister_client(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_unregister(&lcd_notifier_list, nb);
+}
+EXPORT_SYMBOL(lcd_unregister_client);
+
+/**
+ *	lcd_notifier_call_chain - notify clients on lcd_events
+ *	@val: Value passed unmodified to notifier function
+ *	@v: pointer passed unmodified to notifier function
+ *
+ */
+int lcd_notifier_call_chain(unsigned long val, void *v)
+{
+	return blocking_notifier_call_chain(&lcd_notifier_list, val, v);
+}
+EXPORT_SYMBOL_GPL(lcd_notifier_call_chain);
+
diff --git a/drivers/video/msm/mdss/mdss_dsi.c b/drivers/video/msm/mdss/mdss_dsi.c
index 02ca788..e86fe3d 100644
--- a/drivers/video/msm/mdss/mdss_dsi.c
+++ b/drivers/video/msm/mdss/mdss_dsi.c
@@ -22,6 +22,7 @@
 #include <linux/err.h>
 #include <linux/regulator/consumer.h>
 #include <mach/board_lge.h>
+#include <linux/lcd_notify.h>
 
 #include "mdss.h"
 #include "mdss_panel.h"
@@ -1193,6 +1194,7 @@ static int mdss_dsi_event_handler(struct mdss_panel_data *pdata,
 
 	switch (event) {
 	case MDSS_EVENT_UNBLANK:
+		lcd_notifier_call_chain(LCD_EVENT_ON_START, NULL);
 		rc = mdss_dsi_on(pdata);
 		mdss_dsi_op_mode_config(pdata->panel_info.mipi.mode,
 							pdata);
@@ -1203,16 +1205,19 @@ static int mdss_dsi_event_handler(struct mdss_panel_data *pdata,
 		ctrl_pdata->ctrl_state |= CTRL_STATE_MDP_ACTIVE;
 		if (ctrl_pdata->on_cmds.link_state == DSI_HS_MODE)
 			rc = mdss_dsi_unblank(pdata);
+		lcd_notifier_call_chain(LCD_EVENT_ON_END, NULL);
 		break;
 	case MDSS_EVENT_BLANK:
 		if (ctrl_pdata->off_cmds.link_state == DSI_HS_MODE)
 			rc = mdss_dsi_blank(pdata);
+		lcd_notifier_call_chain(LCD_EVENT_OFF_START, NULL);
 		break;
 	case MDSS_EVENT_PANEL_OFF:
 		ctrl_pdata->ctrl_state &= ~CTRL_STATE_MDP_ACTIVE;
 		if (ctrl_pdata->off_cmds.link_state == DSI_LP_MODE)
 			rc = mdss_dsi_blank(pdata);
 		rc = mdss_dsi_off(pdata);
+		lcd_notifier_call_chain(LCD_EVENT_OFF_END, NULL);
 		break;
 	case MDSS_EVENT_CONT_SPLASH_FINISH:
 		if (ctrl_pdata->off_cmds.link_state == DSI_LP_MODE)
diff --git a/include/linux/lcd_notify.h b/include/linux/lcd_notify.h
new file mode 100644
index 0000000..5a27961
--- /dev/null
+++ b/include/linux/lcd_notify.h
@@ -0,0 +1,38 @@
+#ifndef __LINUX_LCD_NOTIFY_H
+#define __LINUX_LCD_NOTIFY_H
+
+#include <linux/notifier.h>
+
+/* the display on process started */
+#define LCD_EVENT_ON_START		0x01
+/* the display on process end */
+#define LCD_EVENT_ON_END		0x02
+/* the display off process started */
+#define LCD_EVENT_OFF_START		0x03
+/* the display off process end */
+#define LCD_EVENT_OFF_END		0x04
+
+struct lcd_event {
+	void *data;
+};
+
+#ifdef CONFIG_FB_MSM_MDSS
+int lcd_register_client(struct notifier_block *nb);
+int lcd_unregister_client(struct notifier_block *nb);
+int lcd_notifier_call_chain(unsigned long val, void *v);
+#else
+static int inline lcd_register_client(struct notifier_block *nb)
+{
+	return -ENOENT;
+}
+static int inline lcd_unregister_client(struct notifier_block *nb)
+{
+	return -ENOENT;
+}
+static int inline lcd_notifier_call_chain(unsigned long val, void *v)
+{
+	return -ENOENT;
+}
+#endif
+#endif /* _LINUX_LCD_NOTIFY_H */
+
--
libgit2 0.22.0

